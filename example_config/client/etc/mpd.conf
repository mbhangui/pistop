# An example configuration file for MPD.
# Read the user manual for documentation: http://www.musicpd.org/doc/user/
# or /usr/share/doc/mpd/html/user.html

# Files and directories #######################################################
#
# This setting controls the top directory which MPD will search to discover the
# available audio files and add them to the daemon's online database. This
# setting defaults to the XDG directory, otherwise the music directory will be
# be disabled and audio files will only be accepted over ipc socket (using
# file:// protocol) or streaming files over an accepted protocol.
#
music_directory                  "/var/lib/mpd/MDrive/Music"
#
# This setting sets the MPD internal playlist directory. The purpose of this
# directory is storage for playlists created by MPD. The server will use
# playlist files not created by the server but only if they are in the MPD
# format. This setting defaults to playlist saving being disabled.
#
playlist_directory               "/var/lib/mpd/MDrive/playlists"
#
# This setting sets the location of the MPD database. This file is used to
# load the database at server start up and store the database while the
# server is not up. This setting defaults to disabled which will allow
# MPD to accept files over ipc socket (using file:// protocol) or streaming
# files over an accepted protocol.
#
#db_file                          "/var/lib/mpd/tag_cache"
#
# These settings are the locations for the daemon log files for the daemon.
# These logs are great for troubleshooting, depending on your log_level
# settings.
#
# The special value "syslog" makes MPD use the local syslog daemon. This
# setting defaults to logging to syslog, or to journal if mpd was started as
# a systemd service.
#
log_file                         "/var/log/mpd/mpd.log"
#
# This setting sets the location of the file which stores the process ID
# for use of mpd --kill and some init scripts. This setting is disabled by
# default and the pid file will not be stored.
#
pid_file                         "/run/mpd/mpd.pid"
#
# This setting sets the location of the file which contains information about
# most variables to get MPD back into the same general shape it was in before
# it was brought down. This setting is disabled by default and the server
# state will be reset on server start up.
#
state_file                       "/var/lib/mpd/MDrive/data/mpd_state.usbridge"
#
# The location of the sticker database.  This is a database which
# manages dynamic information attached to songs.
#
sticker_file                     "/var/lib/mpd/MDrive/data/sticker.db"
#
###############################################################################


# General music daemon options ################################################
#
# This setting specifies the user that MPD will run as. MPD should never run as
# root and you may use this setting to make MPD change its user ID after
# initialization. This setting is disabled by default and MPD is run as the
# current user.
#
user                             "pi"
#
# This setting specifies the group that MPD will run as. If not specified
# primary group of user specified with "user" setting will be used (if set).
# This is useful if MPD needs to be a member of group such as "audio" to
# have permission to use sound card.
#
group                            "pi"
#
# This setting sets the address for the daemon to listen on. Careful attention
# should be paid if this is assigned to anything other then the default, any.
# This setting can deny access to control of the daemon. Choose any if you want
# to have mpd listen on every address. Not effective if systemd socket
# activation is in use.
#
# For network
bind_to_address                  "192.168.2.114"
bind_to_address                  "127.0.0.1"
#
# And for Unix Socket
bind_to_address                  "/run/mpd/mpd.sock"
#
# This setting is the TCP port that is desired for the daemon to get assigned
# to.
#
port                             "6600"
#
# This setting controls the type of information which is logged. Available
# setting arguments are "default", "secure" or "verbose". The "verbose" setting
# argument is recommended for troubleshooting, though can quickly stretch
# available resources on limited hardware storage.
#
log_level                        "secure"
#
# If you have a problem with your MP3s ending abruptly it is recommended that
# you set this argument to "no" to attempt to fix the problem. If this solves
# the problem, it is highly recommended to fix the MP3 files with vbrfix
# (available from <http://www.willwap.co.uk/Programs/vbrfix.php>), at which
# point gapless MP3 playback can be enabled.
#
#gapless_mp3_playback             "yes"
#
# Setting "restore_paused" to "yes" puts MPD into pause mode instead
# of starting playback after startup.
#
restore_paused                   "no"
#
# This setting enables MPD to create playlists in a format usable by other
# music players.
#
save_absolute_paths_in_playlists "no"
#
# This setting defines a list of tag types that will be extracted during the
# audio file discovery process. The complete list of possible values can be
# found in the user manual.
#metadata_to_use                  "artist,album,title,track,name,genre,date,composer,performer,disc"
#
# This example just enables the "comment" tag without disabling all
# the other supported tags:
#metadata_to_use                  "+comment"
#
# This setting enables automatic update of MPD's database when files in
# music_directory are changed.
#
auto_update                      "no"
#
# Limit the depth of the directories being watched, 0 means only watch
# the music directory itself.  There is no limit by default.
#
#auto_update_depth                "3"
#
###############################################################################


# Symbolic link behavior ######################################################
#
# If this setting is set to "yes", MPD will discover audio files by following
# symbolic links outside of the configured music_directory.
#
follow_outside_symlinks          "yes"
#
# If this setting is set to "yes", MPD will discover audio files by following
# symbolic links inside of the configured music_directory.
#
follow_inside_symlinks           "yes"
#
###############################################################################


# Zeroconf / Avahi Service Discovery ##########################################
#
# If this setting is set to "yes", service information will be published with
# Zeroconf / Avahi.
#
zeroconf_enabled                 "yes"
#
# The argument to this setting will be the Zeroconf / Avahi unique name for
# this MPD server on the network. %h will be replaced with the hostname.
#
zeroconf_name                    "usbridge MPD"
#
###############################################################################


# Permissions #################################################################
#
# If this setting is set, MPD will require password authorization. The password
# setting can be specified multiple times for different password profiles.
#
#password                         "password@read,add,control,admin"
#
# This setting specifies the permissions a user has who has not yet logged in.
#
#default_permissions              "read,add,control,admin"
#
###############################################################################

# Database #######################################################################
#
database {
    plugin          "proxy"
    host            "MusicPI"
    port            "6600"
#   cache_directory "/var/lib/mpd/MDrive/cache"
}
#
#database {
#   plugin          "upnp"
#}

# Input #######################################################################
#

input {
    plugin         "curl"
#   proxy          "proxy.isp.com:8080"
#   proxy_user     "user"
#   proxy_password "password"
}

# QOBUZ input plugin
input {
    enabled        "no"
    plugin         "qobuz"
#   app_id         "ID"
#   app_secret     "SECRET"
#   username       "USERNAME"
#   password       "PASSWORD"
#   format_id      "N"
}

# TIDAL input plugin
input {
    enabled        "no"
    plugin         "tidal"
#   token          "TOKEN"
#   username       "USERNAME"
#   password       "PASSWORD"
#   audioquality   "Q"
}
#

###############################################################################

#neighbors {
#   plugin "upnp"
#   plugin "smbclient"
#}

# Decoder #####################################################################
#

decoder {
    plugin         "hybrid_dsd"
    enabled        "no"
    gapless "no"
}


resampler {
    plugin  "soxr"
    quality "high"
    threads "0"
}

# Audio Output ################################################################
#
# MPD supports various audio output types, as well as playing through multiple
# audio outputs at the same time, through multiple audio_output settings
# blocks. Setting this block is optional, though the server will only attempt
# autodetection for one sound card.
#
#audio_output {
#   type     "pulse"
#   name     "PULSE Device"
#   server   "localhost"
#}
#
audio_output {
    type            "alsa"
    name            "Revolution"
    device          "hw:Revolution"
    mixer_type      "hardware"
    mixer_device    "hw:Revolution"
    mixer_control   "Revolution "
#   format          "*:32:2"
#   format          "384000:32:2"
##########
#   buffer_time     "200000"
#   period_time     "1024000000"
    auto_resample   "no"
    auto_channels   "no"
    auto_format     "no"
###########
    dop             "no"
#   dsd_usb         "no"
#   dsd_native      "yes"
#   dsd_native_type "2"
}

#audio_output {
#   type          "alsa"
#   name          "HDMI"
#   device        "hw:vc4hdmi"    # optional
#   mixer_type    "software"      # optional
#   mixer_device  "hw:vc4hdmi"    # optional
#   mixer_control "Master"        # optional
#}

#audio_output {
#   type          "alsa"
#   name          "Headphones"
#   device        "hw:Headphones"         # optional
#   mixer_type    "hardware"              # optional
#   mixer_device  "hw:Headphones"         # optional
#   mixer_control "Headphone"             # optional
#}

#audio_output {
#   type            "alsa"
#   name            "Parametric Equalizer"
#   device          "plug:plugequal"
#   mixer_type      "software"
#}

audio_output {
   type            "alsa"
   name            "xonar essenceone"
   device          "hw:one"   # optional
   format          "192000:24:2"
   mixer_type      "software" # optional
#  mixer_device    "default"  # optional
#  mixer_control   "PCM"      # optional
#  mixer_index     "0"        # optional
   dop             "yes"
}

#audio_output {
#   type            "alsa"
#   name            "hifaceTWO UAC2"
#   device          "hw:UAC2"               # optional
#   mixer_type      "hardware"              # optional
#   mixer_device    "hw:UAC2"               # optional
#   mixer_control   "hiFaceTWO UAC2 Output" # optional
#   mixer_index     "0"                     # optional
#   dop             "yes"
#}

#audio_output {
#   type            "alsa"
#   name            "Scarlett 2i2 USB"
#   device          "hw:USB"                # optional
#   mixer_type      "software"              # optional
#   dop             "yes"
#}

#audio_output {
#   type            "alsa"     # SMSL M8
#   name            "xCore"
#   device          "hw:x20"   # optional
#   mixer_type      "hardware" # optional
#   mixer_device    "hw:x20"   # optional
#   mixer_control   "xCORE USB Audio 2.0 Output" # optional
#   mixer_index     "0" # optional
#}

#audio_output {
#   type            "alsa"
#   name            "Juli@"
#   device          "hw:Juli"   # optional
#   mixer_type      "hardware"  # optional
#   mixer_device    "default"   # optional
#   mixer_control   "PCM"       # optional
#   mixer_index     "0"         # optional
#}

#audio_output {
#   type            "httpd"
#   name            "HTTPD-lossless"
#   encoder         "flac"
#   bind_to_address "any"
#   port            "8000"  # streaming url http://ip_address:8000
#   max_clients     "8"
#   always_on       "yes"
#   tags            "yes"
#   mixer_type      "software"
#   format          "44100:16:2"
#}
#
#audio_output {
#   type            "httpd"
#   name            "HTTPD-lossy"
#   encoder         "lame"
#   bitrate         "320"
#   bind_to_address "any"
#   port            "8001"  # streaming url http://ip_address:8001
#   max_clients     "8"
#   always_on       "yes"
#   tags            "yes"
#   mixer_type      "software"
#   format          "44100:16:2"
#}

#audio_output {
#   type            "fifo"
#   name            "my_fifo"
#   path            "/tmp/mpd.fifo"
#   format          "44100:16:2"
#}
###############################################################################

# Normalization automatic volume adjustments ##################################
#
# This setting specifies the type of ReplayGain to use. This setting can have
# the argument "off", "album", "track" or "auto". "auto" is a special mode that
# chooses between "track" and "album" depending on the current state of
# random playback. If random playback is enabled then "track" mode is used.
# See <http://www.replaygain.org> for more details about ReplayGain.
# This setting is off by default.
#
#replaygain                       "album"
#
# This setting sets the pre-amp used for files that have ReplayGain tags. By
# default this setting is disabled.
#
#replaygain_preamp                "0"
#
# This setting sets the pre-amp used for files that do NOT have ReplayGain tags.
# By default this setting is disabled.
#
#replaygain_missing_preamp        "0"
#
# This setting enables or disables ReplayGain limiting.
# MPD calculates actual amplification based on the ReplayGain tags
# and replaygain_preamp / replaygain_missing_preamp setting.
# If replaygain_limit is enabled MPD will never amplify audio signal
# above its original level. If replaygain_limit is disabled such amplification
# might occur. By default this setting is enabled.
#
#replaygain_limit                 "yes"
#
# This setting enables on-the-fly normalization volume adjustment. This will
# result in the volume of all playing audio to be adjusted so the output has
# equal "loudness". This setting is disabled by default.
#
volume_normalization             "no"
#
# MPD Internal Buffering ######################################################
#
# This setting adjusts the size of internal decoded audio buffering. Changing
# this may have undesired effects. Don't change this if you don't know what you
# are doing.
#
audio_buffer_size                "8192"
#
# This setting controls the percentage of the buffer which is filled before
# beginning to play. Increasing this reduces the chance of audio file skipping,
# at the cost of increased time prior to audio playback.
#
#buffer_before_play               "10%"
#
max_output_buffer_size           "81920"

# Character Encoding ##########################################################
#
# If file or directory names do not display correctly for your locale then you
# may need to modify this setting.
#
#filesystem_charset               "UTF-8"
#id3v1_encoding                   "UTF-8"
#
# Resource Limitations ########################################################
#connection_timeout               "60"
max_connections                  "20"
max_playlist_length              "81920"
max_command_list_size            "81920"

#Realtime audio conversion & upscaling
#audio_output_format              "*:32:2"
#samplerate_converter             "soxr high"
