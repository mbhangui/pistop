#!/bin/sh
# postinst script for pistop
#
# see: dh_installdeb(1)

set -e
prefix=@prefix@
# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


upgrade=0
case "$1" in
    configure)
	if [ ! " $2" = " " ] ; then
		upgrade=1
	fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#
if [ $upgrade -eq 1 ] ; then # upgrade
	# refresh fclient, fserver services
	for i in fclient fserver
	do
		if [ ! -d /service/$i ] ; then
			continue
		fi
		if [ ! -f /service/$i/variables/.options ] ; then
			mkdir -p /service/$i/variables
			options=`grep "^#" /service/$i/run | sed -n 2p | cut -c3-`
			if [ -n "$options" ] ; then
				echo $options > /service/$i/variables/.options
			fi
		fi
		${prefix}/sbin/minisvc --servicedir=/service --refreshsvc="/service/$i"
	done
	# start fclient, fserver services after upgrade
	if [ -d /run ] ; then
		rundir=/run/svscan
	elif [ -d /var/run ] ; then
		rundir=/var/run/svscan
	else
		rundir=/service
	fi
	set +e
	for i in fclient fserver
	do
		if [ ! -d /service/$i ] ; then
			continue
		fi
		${prefix}/bin/svok /service/$i >/dev/null 2>&1
		if [ $? -eq 0 -a -f ${rundir}/$i/.down ] ; then
			rm -f ${rundir}/$i/.down
			${prefix}/bin/svc -u /service/$i
		fi
	done
	set -e
	exit 0
fi
exit 0
