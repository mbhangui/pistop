%undefine _missing_build_ids_terminate_build
%global _unpackaged_files_terminate_build 1
%global debug_package %{nil}

%if %{defined _project}
# define if building on openSUSE build service
%global build_on_obs       1
%global reconfigure_mode   0
%else
%define _project           local
%global build_on_obs       0
%global reconfigure_mode   0
%global _hardened_build    1
%endif
%global _prefix            /usr
%global sysconfdir         @sysconfdir@
%global logdir             /var/log/svc

Name: pistop
Version: @version@
Release: @release@%{?dist}
Summary: Start/Stop services on file server startup/shutdown
%if %build_on_obs == 1
License: GPL-2.0
%else
License: GPLv2
%endif
URL: https://github.com/mbhangui/%{name}
Source0: http://downloads.sourceforge.net/%{name}/%{name}-%{version}.tar.gz

%if %build_on_obs == 1
%if 0%{?suse_version}
BuildRequires: -post-build-checks
#!BuildIgnore: post-build-checks  
%endif
%endif
BuildRequires: libqmail-devel libqmail
Requires: user(qmaill)
Requires: group(nofiles)
Requires: daemontools ucspi-tcp coreutils util-linux rsync at

%description
pistop is a package that provides two services fclient and fserver.

fclient is a svscan service that monitors the uptime of a server running
fserver service on port 5555. shutdown is detected by a socket close

fserver is a svscan service that provides a socket on port 5555 and offers
rudimentary commands.

%prep
%autosetup

%build
%configure --prefix=%{_prefix} --sysconfdir=/etc/%{name} \
  --libexecdir=%{_prefix}/libexec/%{name}
%{__make} -s %{?_smp_mflags}
(
echo "---------------- INFORMATION ------------------------"
echo target         %_target
echo target_alias   %_target_alias
echo target_cpu     %_target_cpu
echo target_os      %_target_os
echo target_vendor  %_target_vendor
echo Project        %{_project}
echo Building %{name}-%{version}-%{release} Build %{_build} OS %{_os}
echo "------------------------------------------------------"
) > %{name}-rpm.info

%install
rm -rf $RPM_BUILD_ROOT
%{__make} -s DESTDIR=%{buildroot} install-strip
%{__mkdir_p} %{buildroot}%{sysconfdir}
install -m 0644 %{name}-rpm.info %{buildroot}%{sysconfdir}/%{name}-rpm.info

%files
%dir %attr(755,root,root)               %{_prefix}/libexec/%{name}
%ghost %dir %attr(0755,qmaill,nofiles)  %{logdir}
%ghost      %attr(-,qmaill,nofiles)     %{logdir}/*
%license COPYING
%attr(755,root,root)                    %{_prefix}/libexec/%{name}/client
%attr(755,root,root)                    %{_prefix}/libexec/%{name}/backup
%attr(755,root,root)                    %{_prefix}/libexec/%{name}/create_service
%attr(755,root,root)                    %{_prefix}/libexec/%{name}/server
%attr(644,root,root) %config(noreplace) %{sysconfdir}/%{name}-release
%attr(644,root,root) %config(noreplace) %{sysconfdir}/%{name}-rpm.info
%docdir %{_prefix}/share/doc/%{name}
%{_prefix}/share/doc/*

%pretrans
# stop fclient, fserver services before upgrade
if [ -d /run ] ; then
  rundir=/run/svscan
elif [ -d /var/run ] ; then
  rundir=/var/run/svscan
else
  rundir=/service
fi
for i in fclient fserver; do
  if [ ! -d /service/$i ] ; then
    continue
  fi
  %{_prefix}/bin/svstat /service/$i >/dev/null 2>&1
  if [ $? -eq 0 ] ; then
    %{__mkdir_p} ${rundir}/$i
    %{_prefix}/bin/svc -d /service/$i
    touch ${rundir}/$i/.down
  fi
done

%post
argv1=$1
if [ -z "$argv1" ] ; then
  argv1=0
fi
# we are doing upgrade
if [ $argv1 -eq 2 ] ; then # upgrade
  if [ -d /run ] ; then
    rundir=/run/svscan
  elif [ -d /var/run ] ; then
    rundir=/var/run/svscan
  else
    rundir=/service
  fi
  # refresh fclient, fserver services
  for i in fclient fserver update; do
    if [ ! -d /service/$i ] ; then
      continue
    fi
	# earlier installations did not have .options
    if [ ! -f /service/$i/variables/.options ] ; then
      %{__mkdir_p} /service/$i/variables
      options=`grep "^#" /service/$i/run | sed -n 2p | cut -c3-`
      if [ -n "$options" ] ; then
        echo $options > /service/$i/variables/.options
      fi
    fi
    %{_prefix}/sbin/minisvc --servicedir=/service --refreshsvc="/service/$i" --silent
    %{_prefix}/sbin/minisvc --servicedir=/service --service-name=$i \
      --export-variables=/service/$i/variables/.variables --force --silent
    %{_prefix}/bin/svok /service/$i >/dev/null 2>&1
    if [ $? -eq 0 -a -f ${rundir}/$i/.down ] ; then
      %{__rm} -f ${rundir}/$i/.down
      %{_prefix}/bin/svc -u /service/$i
    fi
  done
  exit 0
fi
for i in fclient fserver update; do
  if [ ! -d /service/$i ] ; then
    continue
  fi
  %{_prefix}/sbin/minisvc --servicedir=/service --service-name=$i \
    --export-variables=/service/$i/variables/.variables --force --silent
done

%preun
argv1=$1
if [ -z "$argv1" ] ; then
  argv1=0
fi
# we are doing upgrade
if [ $argv1 -eq 1 ] ; then
  exit 0
fi
if [ -d /service/fclient ] ; then
  service_name=fclient
elif [ -d /service/fserver ] ; then
  service_name=fserver
fi
echo "removing ${service_name} logs"
log_dir=%{logdir}/${service_name}
[ "$log_dir" != "/" ] && %{__rm} -fr $log_dir
echo "stopping and removing ${service_name} service"
/usr/libexec/pistop/create_service --servicedir=/service --service_name=${service_name} --del-service
/usr/libexec/pistop/create_service --servicedir=/service --service_name=update --del-service

%changelog
